# -*- coding: utf-8 -*-

import sys
import socket

import psutil


# cpu信息
cpu_idle = psutil.cpu_times_percent(interval=1).idle
cpu_use_per = "{0:.2f}%".format(100-cpu_idle)

# 内存信息
mem = psutil.virtual_memory()
mem_per = "{0:.2f}".format(mem.percent)

# 磁盘信息
root_usage = "{0:.2f}%".format(psutil.disk_usage("/").percent)
home_usage = "{0:.2f}%".format(psutil.disk_usage("/home").percent)

# 端口测试
def check_port(port_listen, port_type="AF_INET"):
    if port_type == "AF_INET":
        sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    elif port_type == "AF_INET6":
        sock = socket.socket(socket.AF_INET6, socket.SOCK_STREAM)
    else:
        sock = socket.socket()
    result = sock.connect_ex(('127.0.0.1', port_listen))
    sock.close()
    return result


def dict_input(input):
    "将dict格式的str转换成dict"
    result = {}
    content = input.split('{')[1].split('}')[0]
    for item in content.split(','):
        key, value = item.split(':')
        result[key] = value
    return result


if __name__ == "__main__":
    ser_port_str = ''.join(sys.argv[1:])
    if ser_port_str:
        ser_port = dict_input(ser_port_str)
        port_state = ""
        for ser in ser_port:
            ser_p = int(ser_port[ser])
            if check_port(ser_p):
                port_state = "%s\n%s's port:%d is BAD!!" % (port_state, ser, ser_p)
            else:
                port_state = "%s\n%s's port:%d is OK!" % (port_state, ser, ser_p)
    else:
        port_state = "no port pass!!"

    with open("/tmp/check_host.txt", "w") as f:
        check_result = \
            "\
cpu usage: %s\n\
mem usage: %s\n\
disk usage:\n\
     /     %s\n\
     /home %s\n\
%s\n" % (cpu_use_per,
         mem_per,
         root_usage,
         home_usage,
         port_state)
        print check_result
        f.write(check_result)
